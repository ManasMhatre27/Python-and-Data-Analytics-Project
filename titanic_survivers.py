# -*- coding: utf-8 -*-
"""Titanic_Survivers.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vzEGQRJhBGjYHSMhCgunNpc9XGaV2usc

# **TITANIC SURVIVORS ANALYSIS**
"""

import pandas as pd
import numpy as np

"""# **READING DATA USING PANDAS**

We use pandas read_csv function to read the csv file in python and pandas *DataFrame* method to convert file into the data frame.
"""

df=pd.DataFrame(pd.read_csv('/content/train (1).csv'))
df.head()

"""For finding the total no. of rows and columns in the table we can use pandas ***.shape*** function."""

df.shape

"""# **HANDLING NULL VALUES**"""

df.isnull().sum()

"""**Separating out the columns which have more than 35% of the values missing in the dataset**"""

x=df.isnull().sum()
drop_col = x[x>(35/100 * df.shape[0])]
drop_col

drop_col.index

df.drop(drop_col.index,axis=1,inplace=True)
df.isnull().sum()

"""Now, we will try to fill the remaning NULL values by filling some meaningful values in them."""

df.fillna(df.mean(),inplace=True)
df.isnull().sum()

"""Since, the Embarked column has values of datatype other than the int or float thats why we can't get mean of them.So, now we will try to find out some properties of Embarked column by using ***.describe()*** function."""

df['Embarked'].describe()

"""For Embarked attribute, we will find the NULL values with the most frequent value in the column. """

df['Embarked'].fillna('S',inplace=True)

df.isnull().sum()

"""# **ANALYZING THE DATA USING COREELATION TABLE**"""

df.corr()

"""From the above table, we can correlate the difeerent rows and columns and draw some conclusions.

**SibSp**: No. of Siblings/Spouces Abroad

**Parch**: No. of Parents/Children Abroad

So we can make a new column ***FamilySize*** by combining these two columns.
"""

df['FamilySize']=df['SibSp']+df['Parch']
df.drop(['SibSp','Parch'],axis=1,inplace=True)
df.corr()

"""**FamilySize does not have much coreelation with Survival Rate.**

Lets check weather if the person was alone or not can affect the Survival Rate.
"""

df['Alone'] = [0 if df['FamilySize'][i]>0 else 1 for i in df.index]
df.head()

df.groupby(['Alone'])['Survived'].mean()

"""If the person is alone he/she has less chance of surviving.


> The reason might be the person who is travelling with his family might be belonging to rich class and might be prioratized over other.
"""

df[['Alone','Fare']].corr()

"""So we can see that if the person was not alone ,the chance of ticket price is higher is high."""

df['Sex']=[0 if df['Sex'][i]=='male' else 1 for i in df.index]
df.groupby(['Sex'])['Survived'].mean()

"""It shows, female passengers have more chance of surviving than male ones.

It shows women were prioritized over men.
"""

df.groupby(['Embarked'])['Survived'].mean()

"""Passengers who borded the ship at Cherbourg, Survived more in proportion than the others.

# **CONCLUSION**

*   Female passengers were prioritized over men. 
*   People with high class or rich people have higher Survival Rate than others.The hierarichy might have been followed while saving the passengers.
*   Passengers travelling with their family have higher Survival Rate.
*   Passengers who borded the ship at Cherbourg, Survived more in proportion than the others.
"""